/*
 * entidad.c
 *
 *  Created on: 2 jul. 2022
 *      Author: PC-INC
 */
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "entidad.h"
#include "LinkedList.h"
//id,nombre,anio,genero
eEntidad* eEntidad_new()
{
	eEntidad* puntero;

	puntero =  (eEntidad*)malloc(sizeof(eEntidad));

	return puntero;
}
eEntidad* eEntidad_newParametros(char* idStr,char*nombreStr,char*anioStr,char*generoStr)
{

	eEntidad*  unEntidad = eEntidad_new();


	    if(unEntidad != NULL && idStr != NULL && nombreStr != NULL && anioStr != NULL && generoStr != NULL )
	    {
            if(eEntidad_setId(unEntidad, atoi(idStr)) == -1 ||
	    			eEntidad_setNombre(unEntidad, nombreStr) == -1 ||
					 eEntidad_setAnio(unEntidad, atoi(anioStr))== -1 ||
					 eEntidad_setGenero(unEntidad, generoStr)== -1 )

	    	{
	    		eEntidad_delete(unEntidad);
	    	}
	    }
	return unEntidad;
}

//nombre empleo dedicacion
//edad horas
void eEntidad_delete(eEntidad* this)
{
	if(this != NULL)
	{
		free(this);
	}
}


int eEntidad_setId(eEntidad* this,int id)
{
	int retorno = -1;

	if(this != NULL && id > 0)
	{
		this->id = id;
		retorno = 0;
	}
	return retorno;
}

int eEntidad_getId(eEntidad* this,int* id)
{
	int retorno = -1;

	if(this!= NULL && id != NULL)
	{
		*id = this->id;
		retorno = 0;
	}
	return retorno;
}


int eEntidad_setNombre(eEntidad* this,char* nombre)
{
	int retorno =-1;

	if(this != NULL && nombre != NULL)
	{
		strcpy(this->nombre,nombre);
		retorno = 0;
	}
	return retorno;

}
int eEntidad_getNombre(eEntidad* this,char* nombre)
{
	int retorno = -1;

	if(this!= NULL && nombre != NULL)
	{
		strcpy(nombre,this->nombre);
		retorno = 0;
	}

	return retorno;
}

int eEntidad_setAnio(eEntidad* this,int anio)
{
	int retorno = -1;

	if(this != NULL && anio > 0)
	{
		this->anio = anio;
		retorno = 0;
	}
	return retorno;
}

int eEntidad_getAnio(eEntidad* this,int* anio)
{
	int retorno = -1;

	if(this!= NULL && anio != NULL)
	{
		*anio = this->anio;
		retorno = 0;
	}
	return retorno;
}
int eEntidad_setGenero(eEntidad* this,char* genero)
{
	int retorno =-1;

	if(this != NULL && genero != NULL)
	{
		strcpy(this->genero,genero);
		retorno = 0;
	}
	return retorno;

}
int eEntidad_getGenero(eEntidad* this,char* genero)
{
	int retorno = -1;

	if(this!= NULL && genero != NULL)
	{
		strcpy(genero,this->genero);
		retorno = 0;
	}

	return retorno;
}
void eEntidad_printOne(eEntidad* unEntidad)
{

	int id;
	char nombre[200];
	int anio;
	char genero[200];

	eEntidad_getId(unEntidad, &id);
	eEntidad_getNombre(unEntidad, nombre);
	eEntidad_getAnio(unEntidad, &anio);
	eEntidad_getGenero(unEntidad, genero);

	printf("\n%d  %s  %d  %s \n",id,nombre,anio,genero);

}


int eEntidad_sortId(void* p1,void* p2)
{
	int retorno;
	int id1=0;
	int id2=0;

	eEntidad* entidad1 = (eEntidad*)p1;
	eEntidad* entidad2 = (eEntidad*)p2;

	    if(entidad1!=NULL && entidad2!=NULL)
	    {
	        eEntidad_getId(entidad1, &id1);
	        eEntidad_getId(entidad2, &id2);

	       if(id1>id2)
	       {
	           retorno = 1;
	       }
	       else if(id1<id2)
	       {
	           retorno = -1;
	       }
	       else
	       {
	           retorno = 0;
	       }

	    }
	return retorno;
}

int filtraAccion(void* unEntidad)
{
	int retorno = 0;
	eEntidad* empl;

	if(unEntidad != NULL)
	{
		empl = (eEntidad*) unEntidad;
		if(strcmp(empl->genero, "Accion") == 0)
		{
			retorno = 1;
		}
	}
	return retorno;
}

int filtraAventura(void* unEntidad)
{
	int retorno = 0;
	char auxGenero[200];

	eEntidad_getGenero(unEntidad,auxGenero);

	if(stricmp(auxGenero,"Aventura")==0)
	{
		retorno = 1;
	}
	return retorno;
}

int filtraAnimacion(void* unEntidad)
{
	int retorno = 0;
	char auxGenero[200];

	eEntidad_getGenero(unEntidad,auxGenero);

	if(stricmp(auxGenero,"Animacion")==0)
	{
		retorno = 1;
	}
	return retorno;
}

int filtraFamiliar(void* unEntidad)
{
	int retorno = 0;
	char auxGenero[200];

	eEntidad_getGenero(unEntidad,auxGenero);

	if(stricmp(auxGenero,"Familiar")==0)
	{
		retorno = 1;
	}
	return retorno;
}

int filtraFantasia(void* unEntidad)
{
	int retorno = 0;
	char auxGenero[200];

	eEntidad_getGenero(unEntidad,auxGenero);

	if(stricmp(auxGenero,"Fantasia")==0)
	{
		retorno = 1;
	}
	return retorno;
}

int filtraCienciaFiccion(void* unEntidad)
{
	int retorno = 0;
	char auxGenero[200];

	eEntidad_getGenero(unEntidad,auxGenero);

	if(stricmp(auxGenero, "Ciencia Ficcion")==0)
	{
		retorno = 1;
	}
	return retorno;
}

/*
void depurarPeliculas (LinkedList* pArrayList)
{

	eEntidad* peli1;
	eEntidad* peli2;

	int i;

	int auxId1, auxId2;
    char auxGenero1[30], auxGenero2[30];
	char generoFinal[90];

	if(pArrayList != NULL)
	{
		for(i=0;i<ll_len(pArrayList);i++)
		{
            peli1 = ll_get(pArrayList, i);//primero
            eEntidad_getId(peli1, &auxId1);//tomo su id

            peli2 = ll_get(pArrayList, i+1);//siguiente
            eEntidad_getId(peli2, &auxId2);// tomo su id

            if(auxId1 == auxId2)
            {
            	eEntidad_getGenero(peli1, auxGenero1);

		        eEntidad_getGenero(peli2, auxGenero2);

		        strcpy(generoFinal, auxGenero1);
		        strcat(generoFinal,"|");
		        strcat(generoFinal,auxGenero2);

		        eEntidad_setGenero(peli1, generoFinal);

		        ll_remove(pArrayList, i+1);
            }


            for(int j=i;j<ll_len(pArrayList);j++)
            {
            	peli1 = ll_get(pArrayList, j);//primero
            	eEntidad_getId(peli1, &auxId1);//tomo su id

            	peli2 = ll_get(pArrayList, j+1);//siguiente
            	eEntidad_getId(peli2, &auxId2);// tomo su id

            	if(auxId1 == auxId2)
            	{
            		eEntidad_getGenero(peli1, auxGenero1);

            		eEntidad_getGenero(peli2, auxGenero2);

            		strcpy(generoFinal, auxGenero1);
            		strcat(generoFinal,"|");
            		strcat(generoFinal,auxGenero2);

            		eEntidad_setGenero(peli1, generoFinal);

            		ll_remove(pArrayList, j+1);
            	}
            }
		}
	}
}
*/
void depurarPeliculas (LinkedList* pArrayPelisDepu)
{

    eEntidad* peli1;
    eEntidad* peli2;


    int auxId1, auxId2;
    char auxGenero1[30], auxGenero2[30];

    char generoFinal[90];


    if(pArrayPelisDepu != NULL)   //si el array no es nulo
    {
        for(int i=0; i<ll_len(pArrayPelisDepu)-1; i++) //recorre epliclar
        {
            peli1 = ll_get(pArrayPelisDepu, i); //pelicula 1
            eEntidad_getId(peli1, &auxId1); //id pelicula 1
            peli2 = ll_get(pArrayPelisDepu, i+1); // pelicula 2
            eEntidad_getId(peli2, &auxId2); //id pelicula 2

            if(auxId1 == auxId2) //si son el mismo id
            {
            	eEntidad_getGenero(peli1, auxGenero1); //genero pelicula 1
            	eEntidad_getGenero(peli2, auxGenero2); //genero pelicula 2
                strcpy(generoFinal, auxGenero1);
                strcat(generoFinal, " | ");
                strcat(generoFinal, auxGenero2);

                eEntidad_setGenero(peli1, generoFinal);
                ll_remove(pArrayPelisDepu, i+1);

                for(int j=i+1; j<ll_len(pArrayPelisDepu); j++) //recorre epliclar
                {
                    peli1 = ll_get(pArrayPelisDepu, j); //pelicula 1
                    eEntidad_getId(peli1, &auxId1); //id pelicula 1
                    peli2 = ll_get(pArrayPelisDepu, j+1); // pelicula 2
                    eEntidad_getId(peli2, &auxId2); //id pelicula 2

                    if(auxId1 == auxId2) //si son el mismo id
                    {
                    	eEntidad_getGenero(peli1, auxGenero1); //genero pelicula 1
                    	eEntidad_getGenero(peli2, auxGenero2); //genero pelicula 2
                        strcpy(generoFinal, auxGenero1);
                        strcat(generoFinal, " | ");
                        strcat(generoFinal, auxGenero2);

                        eEntidad_setGenero(peli1, generoFinal);
                        ll_remove(pArrayPelisDepu, j+1);

                        break;
                    }
                }
            }
        }
    }
    else
    {
        printf(" no se ha podido realizar.\n");
    }
}
/*
int eEntidad_sortName(void* p1,void*p2)
{
	char name1[50];
	char name2[50];
	int rtn;

	eEntidad* entidad1 = (eEntidad*)p1;
	eEntidad* entidad2 = (eEntidad*)p2;

	if(entidad1 != NULL && entidad2 != NULL)
	{
       eEntidad_getNombre(entidad1, name1);
       eEntidad_getNombre(entidad2, name2);

       rtn =stricmp(name1,name2);
	}

	return rtn;
}


void eEntidad_printOneDedicacion(eEntidad* unEntidad)
{

	int id;
	char nombre[50];
	char empleo[200];
	int horasTrabajadas;
	int edad;
	char dedicacion[200];

	eEntidad_getId(unEntidad, &id);
	eEntidad_getNombre(unEntidad, nombre);
	eEntidad_getEmpleo(unEntidad, empleo);
	eEntidad_getHorasTrabajadas(unEntidad, &horasTrabajadas);
	eEntidad_getEdad(unEntidad, &edad);
	eEntidad_getDedicacion(unEntidad, dedicacion);

	printf("\n%-5d %-15s  %-15s %-10d %-17d %s\n",id,nombre,empleo,edad,horasTrabajadas,dedicacion);

}

int eEntidad_darValorDedicacion(eEntidad* unEntidad)
{
	int retorno;
	char dedicacion[200];
   eEntidad_getDedicacion(unEntidad, dedicacion);

   if(stricmp(dedicacion,"estandar")==0)
   {
     retorno = 1;
   }

   else if(stricmp(dedicacion,"sobre la media")==0)
   {
	   retorno = 2;
   }

   else if(stricmp(dedicacion,"excesivo")==0)
   {
	   retorno = 3;
   }
   return retorno;
}

int eEntidad_sortDedicacion(void* p1,void* p2)
{
	int retorno;
	int retorno1=0;
	int retorno2=0;

	eEntidad* entidad1 = (eEntidad*)p1;
	eEntidad* entidad2 = (eEntidad*)p2;

	    if(entidad1!=NULL && entidad2!=NULL)
	    {
           retorno1=eEntidad_darValorDedicacion(entidad1);
           retorno2=eEntidad_darValorDedicacion(entidad2);

	       if(retorno1>retorno2)
	       {
	           retorno = 1;
	       }
	       else if(retorno1<retorno2)
	       {
	           retorno = -1;
	       }
	       else
	       {
	           retorno = 0;
	       }

	    }
	return retorno;
}


int eEntidad_LastId(char* id)
{
	int exito = 0;

	FILE* pFile;

	pFile = fopen("src/lastId.csv","r");

	if(pFile != NULL)
	{
		fscanf(pFile,"%[^\n]\n",id);

		exito = 1;
	}
	fclose(pFile);

	return exito;
}


int eEntidad_buscarIdMax(LinkedList* pArrayListPassenger)
{
	int i;
	int tam=ll_len(pArrayListPassenger);
	int idMax=0;
	eEntidad* auxEntidad;

	for(i=0;i<tam;i++)
	{
		auxEntidad = (eEntidad*)ll_get(pArrayListPassenger,i);

		if(auxEntidad->id>idMax)
		{
			idMax=auxEntidad->id;
		}
	}

	return idMax;
}

int eEntidad_saveLastId(int lastId)
{
	int rtn = 0;
	FILE* pFile;

	pFile = fopen("src/lastId.csv","w");

	if(pFile != NULL)
	{
		fprintf(pFile,"%d\n",lastId);
		rtn = 1;
	}

	return rtn;
}

int eEntidad_sortCuotas(void* p1,void* p2)
{
	int retorno;
	int cuota1=0;
	int cuota2=0;

	eEntidad* entidad1 = (eEntidad*)p1;
	eEntidad* entidad2 = (eEntidad*)p2;

	    if(entidad1!=NULL && entidad2!=NULL)
	    {
            eEntidad_getCuotas(entidad1, &cuota1);
	        eEntidad_getCuotas(entidad2, &cuota2);

	       if(cuota1>cuota2)
	       {
	           retorno = 1;
	       }
	       else if(cuota1<cuota2)
	       {
	           retorno = -1;
	       }
	       else
	       {
	           retorno = 0;
	       }

	    }
	return retorno;
}


*/
